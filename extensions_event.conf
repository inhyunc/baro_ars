
; ********************************************************************************
; *                                                                              *
; * 이벤트 : 선물 보관함                                                         *
; *                                                                              *
; ********************************************************************************

[event-main]

exten => _X.,1,Noop([event-main] Recieving Call[${EXTEN}] From [${CHANNEL(peerip)}])

	; INVITE HEAD 정보에서 발신번호 찾기
	same => n, Set(FROMNUM1=${SIP_HEADER(From)})
	same => n, Set(FROMNUM2=${CUT(SIP_HEADER(From),:,2)})
	same => n, Set(GLOBAL(FROMNUM)=${CUT(FROMNUM2,@,1)})

	; INVITE HEAD 정보에서 070 수신번호 찾기
	same => n, Set(TONUM1=${SIP_HEADER(To)})
	same => n, Set(TONUM2=${CUT(SIP_HEADER(To),:,2)})
	same => n, Set(GLOBAL(TONUM)=${CUT(TONUM2,@,1)})

	same => n, Set(PRE=${TONUM:3:4})
	same => n, Set(NUM=${TONUM:7:4})

	same => n, Set(Diver1=${SIP_HEADER(Diversion)})
	same => n, Set(Diver2=${CUT(SIP_HEADER(Diversion),:,2)})
	same => n, Set(Diver3=${CUT(Diver2,>,1)})
	same => n, Goto(event-find,start,1)

	same => n, Hangup()






; ********************************************************************************
; *                                                                              *
; * 이벤트 선물 보관함 : 가입자가 무인택배함에 전화를 걸어 물건 찾아가기         *
; *                                                                              *
; ********************************************************************************

[event-find]

exten => start,1,Noop([event-find] ${STRFTIME(${EPOCH},,%F %T)} [${FROMNUM}] --> [${TONUM}])

	same => n, Set(countWRONG=0)
	same => n, Set(countNoInput=0)
	same => n, Set(countTIMEOUT=0)

	same => n, Set(currentItem=1)
;	same => n, Set(RESULT1=****)
;	same => n, Set(RESULT2=****)
;	same => n, Set(RESULT3=****)
;	same => n, Set(RESULT4=****)
	same => n, Set(ErrorCode=****)

	same => n, Set(baseDIR=magic)
	same => n, Set(MAX_COUNT=4)
	same => n, Set(MAX_RECV_DIGIT=4)
	same => n, Set(MIN_RECV_DIGIT=0)

	same => n, Log(NOTICE,[event-find] ${STRFTIME(${EPOCH},,%F %T)} [${FROMNUM}] --> [${TONUM}])

;	same => n, Set(MGTNO="")
;	same => n, Set(MACADDR=************)
;	same => n, Set(ARSMGTNO=************)

	same => n, Set(ACCUSRTYPE=D)	; G=일반거주자, T=단체

	same => n, Set(PAYMENT=0)
	same => n, Set(ITEMCNT=0)
	same => n, Set(CONTNO=0)
	same => n, Set(LOCKNO1=0)
	same => n, Set(LOCKNO2=0)
	same => n, Set(LOCKNO3=0)
	same => n, Set(LOCKNO4=0)
	same => n, Set(LOCKNO5=0)
	same => n, Set(LOCKNO6=0)
	same => n, Set(LOCKNO7=0)
	same => n, Set(LOCKNO8=0)
	same => n, Set(LOCKNO9=0)
	same => n, Set(DAOU050NUMBER="")

	same => n, Answer()	; Progress()


	; ================================================================================
	; 발신번호를 가지고 발신자가 누른 050번호를 찾는다
	; 택배함이 aladin인 경우에만 유효함
	; ================================================================================
	same => n(get_050_number), Noop(get_050_number)

	same => n, AGI(box_daou_050_number.php)
	same => n, Log(NOTICE,[event-find] [${FROMNUM} --> ${TONUM}] : AGISTATUS=${AGISTATUS} RESULT1=[${RESULT1}] DAOU050NUMBER=${DAOU050NUMBER})

	same => n, GotoIf($[${LEN(${DAOU050NUMBER})}>4]?normal_050_number)

	same => n, Playback(${baseDIR}/not_serviced_number,noanswer)	; 지금 거신 전화번호는 서비스를
	                                                            	; 받을 수 있는 번호가 아닙니다.
	same => n, Goto(Goodbye,1)


	same => n(normal_050_number), Noop(normal_050_number)



	; ================================================================================
	; 발신번호 및 착신번호로 관리번호를 가져온다 :                                   *
	; RESULT1 : 0000 : 해당 ARS번호로 된 택배함이 1개인 경우                         *
	;           1111 : 해당 ARS번호로 된 택배함이 1개 이상일 경우 -> 관리번호 입력받아야 함 
	;           8888 : DB connect 에러                                               *
	;           8898 : 고객님은 시스템에 등록된 가입자가 아닙니다.                   *
	;           8899 : 미등록 회원입니다. 해당 보관함 사용자 등록을 하려면 1번을 눌러 주세요. 
	;           8999 : 해당 ARS 번호가 등록된 택배함 존재하지 않음                   *
	;           9999 : 프로그램 에러                                                 *
	; ================================================================================
	same => n(find_mgtno), Noop(find_mgtno)

	same => n, AGI(barobox/box_find_mgtno.php)

	same => n, Log(NOTICE,[event-find] [${FROMNUM} --> ${TONUM}] : AGISTATUS=${AGISTATUS} MGTNO=[${MGTNO}] MAC=[${MACADDR}] RESULT1=[${RESULT1}], ACCUSRTYPE=${ACCUSRTYPE})

	same => n, GotoIf($["${RESULT1}"="0000"]?get_box_inform)
	same => n, GotoIf($["${RESULT1}"="1111"]?mgt_1111_error)	; 0313 : recv_msg_no --> mgt_1111_error
	same => n, GotoIf($["${RESULT1}"="8888"]?mgt_8888_error)
	same => n, GotoIf($["${RESULT1}"="8898"]?mgt_8898_error)
	same => n, GotoIf($["${RESULT1}"="8899"]?mgt_8899_error)
	same => n, GotoIf($["${RESULT1}"="8999"]?mgt_8999_error)
	same => n, GotoIf($["${RESULT1}"="9999"]?mgt_9999_error:mgt_unknown_error)

	same => n(mgt_1111_error), Noop(mgt_1111_error)
	same => n, Playback(${baseDIR}/mb_mgt_1111_error,noanswer)	; 시스템 정보에 접근하지 못했습니다.
	same => n, Set(ErrorCode=mgt_1111_error)
	same => n, Goto(end_on_mgt_step)

	same => n(mgt_8888_error), Noop(mgt_8888_error)
	same => n, Playback(${baseDIR}/mb_mgt_8888_error,noanswer)	; 시스템 정보에 접근하지 못했습니다.
	same => n, Set(ErrorCode=mgt_8888_error)
	same => n, Goto(end_on_mgt_step)

	same => n(mgt_8898_error), Noop(mgt_8898_error)
	same => n, Set(ErrorCode=mgt_8898_error)
	same => n, Playback(${baseDIR}/mb_mgt_8899_error,noanswer)	; 고객님은 시스템에 등록된 가입자가 아닙니다.
	same => n, Set(ErrorCode=mgt_8899_error)
	same => n, Goto(end_on_mgt_step)

	same => n(mgt_8899_error), Noop(mgt_8899_error)
	same => n, Set(ErrorCode=mgt_8899_error)
;	same => n, read(SELNUM,${baseDIR}/press1_toRegister,1,n,1,5)	; 미등록 회원입니다. 해당 보관함 사용자 등록을 하려면 1번을 눌러 주세요.
;	same => n, GotoIf($[${SELNUM}=1]?event-reg,start,1)

	same => n, Playback(${baseDIR}/mb_mgt_8899_error,noanswer)	; 고객님은 시스템에 등록된 가입자가 아닙니다.
	same => n, Set(ErrorCode=mgt_8899_error)
	same => n, Goto(end_on_mgt_step)

	same => n(mgt_8999_error), Noop(mgt_8999_error)
	same => n, Playback(${baseDIR}/mb_mgt_8999_error,noanswer)	; 해당 ARS번호에 등록된 택배함 번호가 존재하지 않습니다.
	same => n, Set(ErrorCode=mgt_8999_error)
	same => n, Goto(end_on_mgt_step)

	same => n(mgt_9999_error), Noop(mgt_9999_error)
	same => n, Playback(${baseDIR}/mb_mgt_9999_error,noanswer)	; 시스템 서버 장애로 서비스를 제공하지 못합니다.
	same => n, Set(ErrorCode=mgt_9999_error)
	same => n, Goto(end_on_mgt_step)

	same => n(mgt_unknown_error), Noop(mgt_unknown_error)
	same => n, Playback(${baseDIR}/mb_mgt_unknown_error,noanswer)	; 알려지지 않은 장애로 관리번호를 찾을 수 없습니다.
	same => n, Set(ErrorCode=mgt_unknown_error)
	same => n, Goto(end_on_mgt_step)

	same => n(end_on_mgt_step), Noop(end_on_mgt_step)
	same => n, Goto(Goodbye2,1)




	; ================================================================================
	; 발신번호와 ARSMGTNO번호로 열어주어야 할 택배함 갯수와 도어 번호를 가지고 온다  *
	; RESULT2 :                                                                      *
	;           7777 : 찾을 물건 / 세탁물이 없을 때                                  *
	;           0000 : 찾을 물건이 1개 일 때                                         *
	;           0001 : 찾을 물건이 2개 이상 9개 이하일 때                            *
	;           6666 : 찾을 물건이 10개 이상일 때                                    *
	;                                                                                *
	;           8008 : 할당된 관리번호 존재하지않음                                  *
	;           8009 : 할당된 ARS_MST_NO 없음                                        *
	;           8888 : DB connect 에러                                               *
	;           8999 : 해당 ARS 전화번호에 해당하는 데이터 없음                      *
	;           9998 :                                                               *
	;           9999 : 프로그램 에러                                                 *
	; ================================================================================
	same => n(get_box_inform), Noop(Get_Box_Inform MGTNO=${MGTNO})

	same => n, AGI(barobox/box_find_lock.php)

	same => n, Log(NOTICE,[event-find] [${FROMNUM} --> ${TONUM}] : AGISTATUS=${AGISTATUS} RESULT2=[${RESULT2}] PAYMENT=[${PAYMENT}] ITEMCNT=[${ITEMCNT}] LOCKNO1=[${LOCKNO1},${LOCKNO2},${LOCKNO3},${LOCKNO4},${LOCKNO5},${LOCKNO6},${LOCKNO7},${LOCKNO8},${LOCKNO9}] )

	same => n, ExecIf($["${RESULT2}"="6666"]?Set(ITEMCNT=10))

	same => n, GotoIf($["${RESULT2}"="7777"]?lock_succ)	; nothingFind
	same => n, GotoIf($["${RESULT2}"="0000"]?lock_succ)	; onething_toFind
	same => n, GotoIf($["${RESULT2}"="0001"]?lock_succ)	; severalThing_toFind
	same => n, GotoIf($["${RESULT2}"="6666"]?lock_succ)	; useApp

	same => n, GotoIf($["${RESULT2}"="8008"]?lock_8008_error)
	same => n, GotoIf($["${RESULT2}"="8888"]?lock_8888_error)
	same => n, GotoIf($["${RESULT2}"="8999"]?lock_8999_error)
	same => n, GotoIf($["${RESULT2}"="9998"]?lock_9998_error)
	same => n, GotoIf($["${RESULT2}"="9999"]?lock_9999_error:lock_unknown_error)

	same => n(lock_8008_error), Noop(lock_8008_error)
	same => n, Playback(${baseDIR}/mb_lock_8008_error,noanswer)	; 고객께서 요청하신 정보를 찾을 수 없습니다.
	same => n, Set(ErrorCode=lock_8008_error)
	same => n, Goto(end_on_lock_step)

	same => n(lock_8888_error), Noop(lock_8888_error)
	same => n, Playback(${baseDIR}/mb_lock_8888_error,noanswer)	; 시스템 정보에 접근하지 못했습니다.
	same => n, Set(ErrorCode=lock_8888_error)
	same => n, Goto(end_on_lock_step)

	same => n(lock_8999_error), Noop(lock_8999_error)
	same => n, Playback(${baseDIR}/mb_lock_8999_error,noanswer)	; 해당 ARS 번호에 등록된 택배함 번호가 존재하지 않습니다.
	same => n, Set(ErrorCode=lock_8999_error)
	same => n, Goto(end_on_lock_step)

	same => n(lock_9998_error), Noop(lock_9998_error)
	same => n, Playback(${baseDIR}/mb_lock_9998_error,noanswer)	; 지금은 이용할 수 없습니다. 잠시후 이용해 주시기 바랍니다.
	same => n, Set(ErrorCode=lock_9998_error)
	same => n, Goto(end_on_lock_step)

	same => n(lock_9999_error), Noop(lock_9999_error)
	same => n, Playback(${baseDIR}/mb_lock_9999_error,noanswer)	; 시스템 서버 장애로 서비스를 제공하지 못합니다.
	same => n, Set(ErrorCode=lock_9999_error)
	same => n, Goto(end_on_lock_step)

	same => n(lock_unknown_error), Noop(lock_unknown_error)
	same => n, Playback(${baseDIR}/mb_lock_unknown_error,noanswer)	; 알려지지 않은 장애로 도어함 정보를 찾을 수 없습니다.
	same => n, Set(ErrorCode=lock_unknown_error)
	same => n, Goto(end_on_lock_step)

	same => n(end_on_lock_step), Noop(end_on_1_step)
	same => n, Goto(Goodbye2,1)


	same => n(event_0003), Noop(NoThingFind)
	same => n, Playback(EVENT/EVENT_0001,noanswer)	; 축하합니다. 당첨되셨습니다.
	same => n, Playback(EVENT/EVENT_0003,noanswer)	; 선물은 벌써 받으셨네요.
	same => n, Set(ErrorCode=noItems_toFind)
	same => n, Goto(Goodbye,1)


	; ================================================================================
	;                                                                                *
	; ================================================================================
	same => n(lock_succ), Noop(Auth_Succ)

	same => n, Set(countWRONG=0)

	same => n, GotoIF($[${ITEMCNT}=0]?nothingFind) 
	same => n, GotoIF($[${ITEMCNT}=1]?onething_toFind) 
	same => n, GotoIF($[${ITEMCNT}<4]?severalThing_toFind:useApp)


	; ----------------------------------------
	;                                         
	; ----------------------------------------
	same => n(nothingFind), Noop(NoThingFind)

	same => n, Playback(EVENT/EVENT_0000,noanswer)	; 아깝습니다. 이번에는 당첨되지 않으셨네요. 
	                                               	; 다음에는 꼬~옥 행운을 받아가세요.
	same => n, Set(ErrorCode=noItems_toFind)
	same => n, Goto(Goodbye,1)


	; ----------------------------------------
	;                                         
	; ----------------------------------------
	same => n(useApp), Noop(UseApp)

	same => n, Set(i=4)
	same => n, Set(soundFileName=${SPRINTF(counts/%d_gae,${i})})

	same => n, Playback(${baseDIR}/things_toFind,noanswer)		; 찾을 물건이
	same => n, Playback(${baseDIR}/${soundFileName},noanswer)	; [XX] 개
	same => n, Playback(${baseDIR}/is_over,noanswer)		; 넘습니다.
	same => n, Playback(${baseDIR}/useApp_toFind,noanswer)		; 앱을 이용하여 찾으시기 바랍니다.

	same => n, Set(ErrorCode=useApp_toFind)
	same => n, Goto(Goodbye2,1)

	; ================================================================================
	; 찾을 물건이 한개인 경우                                                        *
	; ================================================================================
	same => n(onething_toFind), Noop(onething_toFind)


	; ================================================================================
	; 찾을 물건이 2개 ~ 9개인 경우                                                   *
	; ================================================================================
	same => n(severalThing_toFind), Noop(serveralThing_toFind)

	same => n, Set(currentItem=1)
	same => n, Set(str_FOLDER="${baseDIR}/counts/")
	same => n, Set(soundFileName=${SPRINTF(%s%d_gae,${str_FOLDER},${ITEMCNT})})

	same => n, Playback(EVENT/EVENT_0001,noanswer)			; 축하합니다. 당첨되셨습니다.
	same => n, Set(F1=${SPRINTF(EVENT/EVENT_0002)})			; 고객님의 선물은 
	same => n, Set(F2=${SPRINTF(${soundFileName})})			; X 개
	same => n, Set(F3=${SPRINTF(${baseDIR}/thereAre)})		; 있습니다.


	; ----------------------------------------
	;                                         
	; ----------------------------------------
	same => n(severalThing_toFind_2), Noop(serveralThing_toFind_2)

	same => n(makeSndFile), Noop(makeSndFile)

	same => n, Set(str_FOLDER="${baseDIR}/digits/")
	same => n, ExecIF($[${currentItem}=1]?Set(value_xx=${MATH(${LOCKNO1}%100,int)}))
	same => n, ExecIF($[${currentItem}=2]?Set(value_xx=${MATH(${LOCKNO2}%100,int)}))
	same => n, ExecIF($[${currentItem}=3]?Set(value_xx=${MATH(${LOCKNO3}%100,int)}))
	same => n, ExecIF($[${currentItem}=4]?Set(value_xx=${MATH(${LOCKNO4}%100,int)}))
	same => n, ExecIF($[${currentItem}=5]?Set(value_xx=${MATH(${LOCKNO5}%100,int)}))
	same => n, ExecIF($[${currentItem}=6]?Set(value_xx=${MATH(${LOCKNO6}%100,int)}))
	same => n, ExecIF($[${currentItem}=7]?Set(value_xx=${MATH(${LOCKNO7}%100,int)}))
	same => n, ExecIF($[${currentItem}=8]?Set(value_xx=${MATH(${LOCKNO8}%100,int)}))
	same => n, ExecIF($[${currentItem}=9]?Set(value_xx=${MATH(${LOCKNO9}%100,int)}))

	same => n, Noop(value_xx = [${value_xx}])

	; ---------------------------------------------------------
	; 읽는 방식 : 십자리 + 단단위(단 10이하이면 십단위는 생략)
	; ---------------------------------------------------------
	same => n, Set(value_0x=${MATH(${value_xx}%10,int)})
	same => n, Set(value_x0=${MATH(${value_xx}-${value_0x},int)})

	same => n, Set(FstDigit=${SPRINTF(%s%d,${str_FOLDER},${value_x0})})
	same => n, Set(SndDigit=${SPRINTF(%s%d,${str_FOLDER},${value_0x})})


	same => n, GotoIf($[${value_xx}<10]?p2_below_10)
	same => n, GotoIf($[${value_0x}=0]?p2_equal_0:p2_more_0)

	same => n(p2_below_10), NoOp(p2_below_10)
	same => n, Set(soundFileName=${SPRINTF(%s_beon,${SndDigit})})
	same => n, Goto(p2_play_soundfile)

	same => n(p2_equal_0), NoOp(p2_equal_0)
	same => n, Set(soundFileName=${SPRINTF(%s_beon,${FstDigit})})
	same => n, Goto(p2_play_soundfile)

	same => n(p2_more_0), NoOp(p2_more_0)
	same => n, Set(soundFileName=${SPRINTF(%s&%s_beon,${FstDigit},${SndDigit})})
	same => n, Goto(p2_play_soundfile)


	; ----------------------------------------
	; 보관함 번호는 [XX] 번 입니다.               
	; ----------------------------------------
	same => n(p2_play_soundfile), NoOp(p2_play_soundfile)

	same => n, Set(S1=${soundFileName})		; [XX] 번

	same => n, ExecIF($[${currentItem}=1]?Set(C1=${SPRINTF(%s,${S1})}))
	same => n, ExecIF($[${currentItem}=2]?Set(C2=${SPRINTF(%s&%s,${C1},${S1})}))
	same => n, ExecIF($[${currentItem}=3]?Set(C3=${SPRINTF(%s&%s,${C2},${S1})}))
	same => n, ExecIF($[${currentItem}=4]?Set(C4=${SPRINTF(%s&%s,${C3},${S1})}))
	same => n, ExecIF($[${currentItem}=5]?Set(C5=${SPRINTF(%s&%s,${C4},${S1})}))
	same => n, ExecIF($[${currentItem}=6]?Set(C6=${SPRINTF(%s&%s,${C5},${S1})}))
	same => n, ExecIF($[${currentItem}=7]?Set(C7=${SPRINTF(%s&%s,${C6},${S1})}))
	same => n, ExecIF($[${currentItem}=8]?Set(C8=${SPRINTF(%s&%s,${C7},${S1})}))
	same => n, ExecIF($[${currentItem}=9]?Set(C9=${SPRINTF(%s&%s,${C8},${S1})}))

	same => n, ExecIF($[${currentItem}=1]?Set(CN=${C1}))
	same => n, ExecIF($[${currentItem}=2]?Set(CN=${C2}))
	same => n, ExecIF($[${currentItem}=3]?Set(CN=${C3}))
	same => n, ExecIF($[${currentItem}=4]?Set(CN=${C4}))
	same => n, ExecIF($[${currentItem}=5]?Set(CN=${C5}))
	same => n, ExecIF($[${currentItem}=6]?Set(CN=${C6}))
	same => n, ExecIF($[${currentItem}=7]?Set(CN=${C7}))
	same => n, ExecIF($[${currentItem}=8]?Set(CN=${C8}))
	same => n, ExecIF($[${currentItem}=9]?Set(CN=${C9}))

	same => n, Set(currentItem=$[${currentItem}+1])
	same => n, GotoIF($[${currentItem}<=${ITEMCNT}]?makeSndFile)

	same => n, Set(B1=${SPRINTF(EVENT/EVENT_0004)})		; 선물함 번호는
	same => n, Set(B2=${SPRINTF(%s,${CN})})			; [XX]번 ... [XX]번
	same => n, Set(B3=${SPRINTF(${baseDIR}/it_is)})		; 입니다. 
	same => n, Set(B4=${SPRINTF(EVENT/EVENT_0005)})		; 지금 선물을 찾아가시려면 1번을 누르시면 됩니다.

	same => n, Set(FN=${SPRINTF(%s&%s&%s&%s&%s&%s&%s,${F1},${F2},${F3},${B1},${B2},${B3},${B4})})

	same => n, read(SELNUM,${FN},1,n,1,5)

	same => n, GotoIf($[${LEN(${SELNUM})}=0]?timeOut)
	same => n, GotoIf($[${SELNUM}=1]?open,1)


	; ================================================================================
	; 고객이 1번을 누르지 않고 다른 버튼 누르는 경우                                 *
	; ================================================================================
	same => n, Set(ErrorCode=pressWrong)
	same => n, Set(countWRONG=$[${countWRONG}+1])
	same => n, GotoIF($[${countWRONG} < ${MAX_COUNT}]?lessThan_00:moreThan_00)

	same => n(lessThan_00), Noop(lessThan_00)
	same => n, read(SELNUM,${baseDIR}/pressWrong,1,n,1,1)	; 잘못 눌렀습니다.
	same => n, GotoIf($[${SELNUM}=1]?open,1)

	same => n, Set(currentItem=1)
	same => n, Goto(start,severalThing_toFind_2)

	same => n(moreThan_00), Noop(moreThan_00)
	same => n, Playback(${baseDIR}/checkAgain,noanswer)	; 확인후 다시 이용해 주십시요.
	same => n, Goto(Goodbye2,1)


	; ================================================================================
	; 고객이 다이얼 버튼을 누르지 않아 타임아웃이 발생하는 경우                      *
	; ================================================================================
	same => n(timeOut), Set(ErrorCode=timeOut)
	same => n, Set(countTIMEOUT=$[${countTIMEOUT}+1])
	same => n, GotoIF($[${countTIMEOUT} < ${MAX_COUNT}]?lessThan_10:moreThan_10)

	same => n(lessThan_10), Noop(lessThan_10)
	same => n, read(SELNUM,${baseDIR}/timeOut,1,n,1,1)	; 입력 시간이 초과되었습니다.
	same => n, GotoIf($[${SELNUM}=1]?open,1)

	same => n, Set(currentItem=1)
	same => n, Goto(start,severalThing_toFind_2)

	same => n(moreThan_10), Noop(moreThan_10)
	same => n, Goto(Goodbye,1)


	; ================================================================================
	; 고객이 1번을 누르는 경우                                                       *
	; ================================================================================
exten => open, 1, Noop(OpenDoor)
	same => n, Set(currentItem=1)

	same => n(openDoor), Noop(openDoor-${curretItem})


	; ================================================================================
	; 택배함 도어를 열어준다                                                         *
	; RESULT3 :                                                                      *
	;           0000 : Door 오픈 됨                                                  *
	;           9999 : 프로그램 에러                                                 *
	;           9998 : 3-1의 파라미터 누락                                           *
	;           1111 : 도어 오픈 요청을 했으나 해당 TCPBOX가 존재하지 않음           *
	; ================================================================================
;	same => n, AGI(agi://218.232.94.161:8200,open,${MACADDR},${CONTNO})
	same => n, AGI(agi://box.baro.so:8200,open,${MACADDR},${CONTNO})


	same => n, Log(NOTICE,[event-find] [${FROMNUM} --> ${TONUM}] : AGISTATUS=${AGISTATUS} MGTNO=[${MGTNO}] MAC=[${MACADDR}] RESULT3=[${RESULT3}] CONTNO=[${CONTNO}] )

	same => n, GotoIf($["${RESULT3}"="0000"]?open_succ)
	same => n, GotoIf($["${RESULT3}"="1111"]?open_1111_error)
	same => n, GotoIf($["${RESULT3}"="9998"]?open_9998_error)
	same => n, GotoIf($["${RESULT3}"="9999"]?open_9999_error:open_unknown_error)

	; ==============================================
	; 도어를 순차적으로 열 때는 여기를 풀어야 한다.
	; ==============================================
	same => n(open_succ), Noop(open_succ)

	; ==============================================
	; 도어를 여는데 성공하는 경우 
	; ==============================================
	same => n, Playback(EVENT/EVENT_0006,noanswer)			; 선물함이 열렸습니다.
	                                              			; 선물을 꺼내신후에 반드시 선물함을 꼬~옥 주세요.
	same => n, Set(ErrorCode=OK)
	same => n, Goto(check_update)


	; ==============================================
	; 도어를 여는데 실패하는 경우 
	; ==============================================
	same => n(open_1111_error), Noop(open_1111_error)

	same => n, Playback(${baseDIR}/mb_open_1111_error,noanswer)	; 도어 오픈을 요청하였으나 일시적으로 해당 박스가
	                                                          	; 존재하지 않아 도어를 여는데 실패하였습니다.
	same => n, Set(ErrorCode=open_1111_error)
	same => n, Goto(end_on_open_step)


	same => n(open_9998_error), Noop(open_9998_error)
	same => n, Playback(${baseDIR}/mb_open_9998_error,noanswer)	; 시스템 장애로 요청하신 도어를 여는데 실패하였습니다.
	same => n, Set(ErrorCode=open_9998_error)
	same => n, Goto(end_on_open_step)


	same => n(open_9999_error), Noop(open_9999_error)
	same => n, Playback(${baseDIR}/mb_open_9999_error,noanswer)	; 시스템 장애로 요청하신 도어를 열지 못 했습니다.
	same => n, Set(ErrorCode=open_9999_error)
	same => n, Goto(end_on_open_step)


	same => n(open_unknown_error), Noop(open_unknown_error)
	same => n, Playback(${baseDIR}/mb_open_unknown_error,noanswer)	; 알려지지 않은 장애로 도어를 열지 못했습니다.
	same => n, Set(ErrorCode=open_unknown_error)
	same => n, Goto(end_on_open_step)

	same => n(end_on_open_step), Noop(end_on_open_step)
	same => n, Goto(Goodbye,1)


	; ================================================================================
	; 보관함 히스토리 업데이트                                                       *
	; RESULT4 :                                                                      *
	;           0000 : 히스토리 업데이트 완료                                        *
	;           8888 : DB connect 에러                                               *
	;           8999: 해당 관리번호 에 대한 인덱스 조회 실패                         *
	;           9999 : 프로그램 에러                                                 *
	; ================================================================================
	same => n(check_update), Noop(check_update)

	same => n, AGI(barobox/box_history_update_find.php)	;

	same => n, Log(NOTICE,[event-find] [${FROMNUM} --> ${TONUM}] : AGISTATUS=${AGISTATUS} RESULT4=[${RESULT4}])

	same => n, GotoIf($["${RESULT4}"="0000"]?update_succ)
	same => n, GotoIf($["${RESULT4}"="8888"]?update_8888_error)
	same => n, GotoIf($["${RESULT4}"="8999"]?update_8999_error)
	same => n, GotoIf($["${RESULT4}"="9999"]?update_9999_error:update_unknown_error)

	same => n(update_succ), Noop(update_succ)
	same => n, Goto(Goodbye,1)

	; ==============================================
	; 업데이트 실패하는 경우 
	; ==============================================
	same => n(update_8888_error), Noop(update_8888_error)
	same => n, Playback(${baseDIR}/mb_update_8888_error,noanswer)	; 이력 정보를 업데이트하는 서버 접근이 허용되지 않고 있습니다.
	same => n, Set(ErrorCode=update_8888_error)
	same => n, Goto(end_on_update_step)

	same => n(update_8999_error), Noop(update_8999_error)
	same => n, Playback(${baseDIR}/mb_update_8999_error,noanswer)	; 요청하신 정보를 조회하였는데 일시적으로 정보에 접근할 수 없습니다.
	same => n, Set(ErrorCode=update_8999_error)
	same => n, Goto(end_on_update_step)

	same => n(update_9999_error), Noop(update_9999_error)
	same => n, Playback(${baseDIR}/mb_update_9999_error,noanswer)	; 이력 정보를 업데이트하는데 장애가 발생하였습니다. 
	same => n, Set(ErrorCode=update_9999_error)
	same => n, Goto(end_on_update_step)

	same => n(update_unknown_error), Noop(update_unknown_error)
	same => n, Playback(${baseDIR}/mb_update_unknown_error,noanswer)	;알려지지 않은 장애로 업데이트를 하지 못 했습니다.
	same => n, Set(ErrorCode=update_unknown_error)
	same => n, Goto(end_on_update_step)

	same => n(end_on_update_step), Noop(end_on_update_step)
	same => n, Goto(Goodbye,1)

	; ================================================================================
	; 고객이 다이얼 버튼을 누르기를 기다리는 중 시스템에서 hangup이 발생하는 경우    *
	; ================================================================================
exten => h,1, Noop(The caller hangs up first)
	same => n, AGI(barobox/box_history_update_find.php)

	same => n, Log(NOTICE,[event-find] [${FROMNUM} --> ${TONUM}] : AGISTATUS=${AGISTATUS} MGTNO=[${MGTNO}] ${ErrorCode}/The_Caller_HangUp )
	same => n, Hangup()


	; ================================================================================
	; 종료 원인을 로그에 저장하고 종료함                                             *
	; ================================================================================
exten => Goodbye,1, Noop(GoodBye)
	same => n, Playback(${baseDIR}/thankYou_forUsing,noanswer)	; 이용해 주셔서 감사합니다.

	same => n, Log(NOTICE,[event-find] [${FROMNUM} --> ${TONUM}] : MGTNO=[${MGTNO}] ERR=[${ErrorCode}] )
	same => n, Hangup()


exten => Goodbye2,1, Noop(Bye)
	same => n, Log(NOTICE,[event-find] [${FROMNUM} --> ${TONUM}] : MGTNO=[${MGTNO}] ERR=[${ErrorCode}] )
	same => n, Hangup()






